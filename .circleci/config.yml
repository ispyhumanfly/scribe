# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
postgres_env: &postgres-env
    environment:
        POSTGRES_USER: postgres

filter-run-always: &filter-run-always
    filters:
        tags:
            only: /.*/

filter-run-on-master-and-version-tag-only: &filter-run-on-master-and-version-tag-only
    filters:
        tags:
            only: /^v.*/
        branches:
            ignore: /.*/

aliases:
    - &step-checkout checkout
    - &step-restore-cache
      restore_cache:
          keys:
              - v1-dependencies-{{ checksum "package.json" }}
              - v1-dependencies-
    - &step-install
      run: npm install
    - &step-save-cache
      save_cache:
          paths:
              - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
    - &image-postgres-9
      image: cimg/postgres:9.6.24
      <<: *postgres-env
    - &image-postgres-10
      image: cimg/postgres:10.21
      <<: *postgres-env
    - &image-postgres-11
      image: cimg/postgres:11.16
      <<: *postgres-env
    - &image-postgres-12
      image: cimg/postgres:12.11
      <<: *postgres-env

build-node-common: &common-build
    working_directory: ~/repo
    steps:
        - *step-checkout
        - *step-restore-cache
        - *step-install
        - *step-save-cache
        - run:
              name: Testing
              command: npm test
              environment:
                  SCRIBE_APP_DB_USER: postgres
                  SCRIBE_APP_DB_NAME: test

version: 2
jobs:
    deploy:
        working_directory: ~/repo
        docker:
            - image: cimg/node:16.17.0
        steps:
            - *step-checkout
            - *step-restore-cache
            - *step-install
            - *step-save-cache
            - run: npm run build
            - run:
                  name: Authenticate with registry
                  command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/repo/.npmrc
            - run:
                  name: Publish package
                  command: npm publish

    build-node16-postgres9:
        <<: *common-build
        docker:
            - image: cimg/node:16.17.0
            - image: redis
            - *image-postgres-9

    build-node18-postgres9:
        <<: *common-build
        docker:
            - image: cimg/node:18.7.0
            - image: redis
            - *image-postgres-9

    build-node16-postgres10:
        <<: *common-build
        docker:
            - image: cimg/node:16.17.0
            - image: redis
            - *image-postgres-10

    build-node18-postgres10:
        <<: *common-build
        docker:
            - image: cimg/node:18.7.0
            - image: redis
            - *image-postgres-10

    build-node16-postgres11:
        <<: *common-build
        docker:
            - image: cimg/node:16.17.0
            - image: redis
            - *image-postgres-11

    build-node18-postgres11:
        <<: *common-build
        docker:
            - image: cimg/node:18.7.0
            - image: redis
            - *image-postgres-11

    build-node16-postgres12:
        <<: *common-build
        docker:
            - image: cimg/node:16.17.0
            - image: redis
            - *image-postgres-12

    build-node18-postgres12:
        <<: *common-build
        docker:
            - image: cimg/node:18.7.0
            - image: redis
            - *image-postgres-12

workflows:
    version: 2
    build_all:
        jobs:
            - build-node18-postgres9:
                  <<: *filter-run-always
            - build-node16-postgres9:
                  <<: *filter-run-always
            - build-node18-postgres10:
                  <<: *filter-run-always
            - build-node16-postgres10:
                  <<: *filter-run-always
            - build-node18-postgres11:
                  <<: *filter-run-always
            - build-node16-postgres11:
                  <<: *filter-run-always
            - build-node18-postgres12:
                  <<: *filter-run-always
            - build-node16-postgres12:
                  <<: *filter-run-always
            - deploy:
                  requires:
                      - build-node18-postgres9
                      - build-node16-postgres9
                      - build-node18-postgres10
                      - build-node16-postgres10
                      - build-node18-postgres11
                      - build-node16-postgres11
                      - build-node18-postgres12
                      - build-node16-postgres12
                  <<: *filter-run-on-master-and-version-tag-only
